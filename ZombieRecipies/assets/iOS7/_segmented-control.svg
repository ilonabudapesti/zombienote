<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->
<svg id="svg2" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://www.w3.org/2000/svg" height="31" width="496" version="1.1" ws-fill="#00F" xmlns:cc="http://creativecommons.org/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" onload="onLoad(evt)" onresize="onResize(evt)">
 <title id="title2818">WireframeSketcher SVG asset</title>
 <metadata id="metadata7">
  <rdf:RDF>
   <cc:Work rdf:about="">
    <dc:format>image/svg+xml</dc:format>
    <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
    <dc:title>WireframeSketcher SVG asset</dc:title>
    <dc:creator>
     <cc:Agent>
      <dc:title>Peter Severin</dc:title>
     </cc:Agent>
    </dc:creator>
    <dc:rights>
     <cc:Agent>
      <dc:title>Copyright (c) WireframeSketcher.com</dc:title>
     </cc:Agent>
    </dc:rights>
   </cc:Work>
  </rdf:RDF>
 </metadata>
 <script><![CDATA[
	var svg, doc;
	var container, bar, backgroundLeft, backgroundSingle, backgroundMiddle, backgroundRight, separator;
	var hPadding = 9, vPadding = 7;
 	var backgroundLeftD, backgroundRightD;
	var fill;
	
	function onLoad(evt) {
	    svg = evt.target;
	    doc = svg.ownerDocument;
	    container = doc.getElementById("container");
	    bar = doc.getElementById("bar");
	    backgroundLeft = doc.getElementById("background-left");
	    backgroundSingle = doc.getElementById("background-single");
	    backgroundMiddle = doc.getElementById("background-middle");
	    backgroundRight = doc.getElementById("background-right");
	    separator = doc.getElementById("separator");
	
	    prepareTemplate(backgroundLeft);
	    prepareTemplate(backgroundSingle);
	    prepareTemplate(backgroundMiddle);
	    prepareTemplate(backgroundRight);
	    prepareTemplate(separator);
	    
		container.removeAttribute('fill');
	    
	    clearNode(container);
	    
 		// Templatize paths
 		backgroundLeftD = backgroundLeft.getAttribute("d").
 			replace(/95/g, "{w}").replace(/30/g, "{h1}").replace(/19/g, "{h2}");
 		backgroundRightD = backgroundRight.getAttribute("d").
 			replace(/90/g, "{w}").replace(/30/g, "{h1}").replace(/19/g, "{h2}");
 			
 		fill = svg.getAttribute("ws-fill");
	}
	
	function prepareTemplate(template) {
		template.removeAttribute('transform');
		template.parentNode.removeChild(template);
	}
	
	function onResize(evt) {
	    var width = parseInt(svg.getAttribute("width"));
	    var height = parseInt(svg.getAttribute("height"));
	    var itemWidth = Math.round((width - 2) / $items.length);
	    var lastItemWidth = (width - 2) - itemWidth * ($items.length - 1);
	    var selectionIndex = ($model.selection === null || $model.selection === "") ? -1 : Number($model.selection);

	    clearNode(container);
	
		resizeBar(bar, width, height);
	
	    for (var i = 0, n = $items.length, x = 1, y = 1; i < n; i++, x += itemWidth) {
	        var item = $items[i];
	        var iItemWidth = i == n - 1 ? lastItemWidth : itemWidth;
	        var bgTemplate;

			if(i === selectionIndex)  {	
		        if (n == 1) {
		        	bgTemplate = backgroundSingle;
		        } else if (i == 0) {
		        	bgTemplate = backgroundLeft;
		        } else if (i == n - 1) {
		        	bgTemplate = backgroundRight;
		        } else {
		        	bgTemplate = backgroundMiddle;
		        }
		
		        var bg = bgTemplate.cloneNode(false);
				resizeBackground(bgTemplate, bg, x, y, iItemWidth, height);
		        container.appendChild(bg);
			}
			
	        var text = doc.createElement("foreignObject");
	        text.setAttribute("id", "item" + i);
	        text.setAttribute("x", x);
	        text.setAttribute("y", y - 1)
	        text.setAttribute("width", iItemWidth);
	        text.setAttribute("height", height);
	        
	        if(i === selectionIndex)
	        	text.setAttribute("fill", fill);
	        else
	        	text.setAttribute("stroke", fill);
	        	
	        container.appendChild(text);
	    }
	
	    for (var i = 0, n = $items.length - 1, x = itemWidth + 1; i < n; i++, x += itemWidth) {
	        var sep = separator.cloneNode(false);
	        sep.setAttribute("d", "M" + x + ",1," + x + "," + (height - 1));
	        container.appendChild(sep);
	    }
	}
	
	function resizeBar(element, width, height) {
	    element.setAttribute("width", width - 2);
	    element.setAttribute("height", height - 2);
	}
		
	
	function clearNode(node) {
	    while (node.firstChild) {
	        node.removeChild(node.firstChild);
	    }
	}
	
	function getPreferredSize() {
	    var maxWidth = 0,
	        maxHeight = 0;
	
	    for (var i = 0, n = $items.length; i < n; i++) {
	        var item = $items[i];
	        maxWidth = Math.max(maxWidth, item.width);
	        maxHeight = Math.max(maxHeight, item.height);
	    }
	
	    maxWidth += hPadding * 2;
	    maxHeight += vPadding * 2;
	
	    return {
	        width: maxWidth * $items.length + 2,
	        height: maxHeight
	    };
	}
 
	function resizeBackground(template, element, x, y, width, height) {
	    if (template === backgroundSingle) {
	        element.setAttribute("x", x);
	        element.setAttribute("height", height - 2);
	        element.setAttribute("width", width);
	    } else if (template === backgroundLeft) {
	        element.setAttribute("d", backgroundLeftD.replace(/{w}/g, width).replace(/{h1}/g, height - 1).replace(/{h2}/g, height - 12));
	        element.setAttribute("transform", "translate(1,0)");
	    } else if (template === backgroundRight) {
	        element.setAttribute("d", backgroundRightD.replace(/{w}/g, width - 5).replace(/{h1}/g, height - 1).replace(/{h2}/g, height - 12));
	        element.setAttribute("transform", "translate(" + x + ",0)");
	    } else {
	        element.setAttribute("x", x);
	        element.setAttribute("height", height - 2);
	        element.setAttribute("width", width);
	    }
	}
 ]]></script>
 <g id="container">
  <path id="separator" stroke-linejoin="miter" d="M1,1,1,29" stroke="#00F" stroke-linecap="butt" stroke-miterlimit="4" stroke-dasharray="none" stroke-width="2" fill="none"/>
  <rect id="background-single" ry="5" height="29" width="100" y="1" x="0" fill="#00F"/>
  <rect id="background-middle" ry="0" height="29" width="100" y="1" x="0" fill="#00F"/>
  <path id="background-left" d="M5,1,95,1,95,30,5,30c-2.77,0-5-2.23-5-5v-19c0-2.77,2.23-5,5-5z" fill="#00F"/>
  <path id="background-right" d="M90,1,0,1,0,30,90,30c2.77,0,5-2.23,5-5v-19c0-2.77-2.23-5-5-5z" fill="#00F"/>
 </g>
 <rect id="bar" stroke-linejoin="round" ry="5" height="29" width="494" stroke="#00F" stroke-linecap="butt" stroke-miterlimit="4" y="1" x="1" stroke-width="2" fill="none"/>
</svg>
